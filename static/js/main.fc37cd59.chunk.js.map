{"version":3,"sources":["API/TMDB.js","Pages/Header.js","Components/Card.js","Pages/Home.js","Pages/Favorites.js","Pages/Watched.js","Pages/About.js","App.js","reportWebVitals.js","index.js"],"names":["api_key","makeMovieObject","tmdbMovie","id","title","poster_path","overview","release_date","genre_ids","vote_average","original_language","a","pageNumber","url","movies","fetch","then","response","json","data","results","forEach","movieObject","push","TMDB","topRatedMovies","Header","Navbar","collapseOnSelect","bg","expand","variant","Brand","href","Toggle","aria-controls","Collapse","Nav","className","style","maxHeight","Link","Form","FormControl","type","placeholder","aria-label","Button","Cards","movie","console","log","Col","Card","Img","src","Body","Title","Text","Footer","Home","setPageNumber","moviesArray","Container","fluid","Row","xs","sm","md","lg","map","key","onClick","Favorites","Watched","About","App","useState","setMovies","useEffect","exact","path","render","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc37cd59.chunk.js","sourcesContent":["const api_key = \"41de89a94220699acb246879ab748789\";\n\nfunction makeMovieObject(tmdbMovie) {\n  return {\n    id: tmdbMovie.id,\n    title: tmdbMovie.title,\n    poster_path: tmdbMovie.poster_path,\n    overview: tmdbMovie.overview,\n    release_date: tmdbMovie.release_date,\n    genre_ids: tmdbMovie.genre_ids,\n    vote_average: tmdbMovie.vote_average,\n    original_language: tmdbMovie.original_language\n  }\n}\n\nasync function topRatedMovies(pageNumber = 1) {\n  const url = `https://api.themoviedb.org/3/movie/top_rated?api_key=${api_key}&language=en-US&page=${pageNumber}`;\n\n  let movies = [];\n\n  movies = await fetch(url)\n    .then((response) => response.json())\n    .then((data) => {\n      // console.log(\"result\",data.results);\n      data.results.forEach(tmdbMovie => {\n        let movieObject = makeMovieObject(tmdbMovie);\n        movies.push(movieObject);\n      });\n      return movies;\n    });\n    return movies;\n}\n\nconst TMDB = { topRatedMovies };\nexport default TMDB;\n","import React from \"react\";\nimport { Navbar, Nav, Form, Button, FormControl } from \"react-bootstrap\";\nimport { BiCameraMovie } from 'react-icons/bi';\n\nfunction Header() {\n  return (\n    <Navbar collapseOnSelect bg=\"dark\" expand=\"lg\" variant=\"dark\">\n      <Navbar.Brand href=\"/\"><BiCameraMovie /> Movie-Hub</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Nav\n          className=\"mr-auto my-2 my-lg-0 justify-content-end\"\n          style={{ maxHeight: \"100px\" }}>\n          <Nav.Link href=\"/\">Home</Nav.Link>\n          <Nav.Link href=\"/favorites\">Favorites</Nav.Link>\n          <Nav.Link href=\"/watched\">Watched Films</Nav.Link>\n          <Nav.Link href=\"/about\">About</Nav.Link>\n        </Nav>\n        <Form className=\"d-flex\">\n          <FormControl\n            type=\"search\"\n            placeholder=\"Search\"\n            className=\"mr-2\"\n            aria-label=\"Search\"\n          />\n          <Button variant=\"outline-success\">Search</Button>\n        </Form>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport { Col, Card } from \"react-bootstrap\";\nfunction Cards({ movie }) {\n  console.log(\"card\", movie);\n  return (\n    <Col>\n      <Card>\n        <Card.Img variant=\"top\" src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} />\n        <Card.Body>\n          <Card.Title>{movie.title}</Card.Title>\n          <Card.Text>{movie.overview}</Card.Text>\n        </Card.Body>\n        <Card.Footer>\n          <small className=\"text-muted\">Release date: {movie.release_date}</small>\n        </Card.Footer>\n      </Card>\n    </Col>\n  );\n}\n\nexport default Cards;\n","import React from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport Cards from \"../Components/Card\";\n\nfunction Home({ movies, pageNumber, setPageNumber }) {\n  console.log(\"ne geldi home\", movies);\n  const moviesArray = [];\n  for (let movie in movies) {\n    moviesArray.push(movies[movie]);\n  }\n\n  function makePagePrevious() {\n    if (pageNumber !== 1) {\n      setPageNumber(pageNumber - 1);\n    }\n  }\n\n  function makePageNext() {\n    setPageNumber(pageNumber + 1);\n  }\n  return (\n    <Container fluid=\"md\">\n      <Row xs={1} sm={2} md={3} lg={4} className=\"g-4\">\n        {moviesArray.map((movie, key) => {\n          return <Cards movie={movie} key={key} />;\n        })}\n      </Row>\n      <br />\n      {pageNumber} <br />\n      <br />\n      <button onClick={makePagePrevious}>Previous</button>\n      <button onClick={makePageNext}>Next</button>\n    </Container>\n  );\n}\n\nexport default Home;\n","import React from 'react'\n\nfunction Favorites() {\n    return (\n        <div>\n            <h1>Favorites</h1>\n        </div>\n    )\n}\n\nexport default Favorites\n","import React from 'react'\n\nfunction Watched() {\n    return (\n        <div>\n            <h1>Watched</h1>\n        </div>\n    )\n}\n\nexport default Watched\n","import React from 'react'\n\nfunction About() {\n    return (\n        <div>\n            <h1>About</h1>\n        </div>\n    )\n}\n\nexport default About\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport TMDB from \"./API/TMDB\";\nimport Header from \"./Pages/Header\";\nimport Home from \"./Pages/Home\";\nimport Favorites from \"./Pages/Favorites\";\nimport Watched from \"./Pages/Watched\";\nimport About from \"./Pages/About\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [pageNumber, setPageNumber] = useState(1);\n\n  useEffect(() => {\n    TMDB.topRatedMovies(pageNumber).then((movie) => setMovies(movie));\n  }, [pageNumber]);\n\n  return (\n    <>\n      <Header />\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" render={() => <Home movies={movies} pageNumber={pageNumber} setPageNumber={setPageNumber} />} />\n          <Route path=\"/favorites\" component={Favorites} />\n          <Route path=\"/watched\" component={Watched} />\n          <Route path=\"/about\" component={About} />\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}